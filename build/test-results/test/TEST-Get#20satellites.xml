<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Get satellites" tests="3" skipped="0" failures="0" errors="0" timestamp="2021-07-25T15:13:32" hostname="C02YC32UJG5H" time="5.598">
  <properties/>
  <testcase name="To verify user can fetch the list of satellites successfully" classname="Get satellites" time="4.683"/>
  <testcase name="To verify get satellites endpoint functionality using satellite ID" classname="Get satellites" time="0.477"/>
  <testcase name="To verify get satellites endpoint functionality using incorrect satellite id" classname="Get satellites" time="0.438"/>
  <system-out><![CDATA[
@HappyPath
Scenario Outline: To verify user can fetch the list of satellites successfully # src/test/resources/cucumber.features/GetSatellites.feature:13
  Given user call the get endpoint for satellites ""                           # com.example.iss.stepdefs.GeneralSteps.usercallthegetendpointforsatelite(java.lang.String)
  When user receive a 200 HTTP response                                        # com.example.iss.stepdefs.GeneralSteps.userreceiveahttpresponse(java.lang.Integer)
io.restassured.path.json.JsonPath@7c27bbf5
Verified iss
Verified 25544
  Then verify response parameters are available                                # com.example.iss.stepdefs.GeneralSteps.verifyresponseparametersavailable(java.util.List<java.util.List<java.lang.String>>)

@HappyPath
Scenario Outline: To verify get satellites endpoint functionality using satellite ID # src/test/resources/cucumber.features/GetSatellites.feature:26
  Given user call the get endpoint for satellites "25544"                            # com.example.iss.stepdefs.GeneralSteps.usercallthegetendpointforsatelite(java.lang.String)
  When user receive a 200 HTTP response                                              # com.example.iss.stepdefs.GeneralSteps.userreceiveahttpresponse(java.lang.Integer)
io.restassured.path.json.JsonPath@332c27e2
Verified iss
Verified 25544
  Then verify response parameters are available                                      # com.example.iss.stepdefs.GeneralSteps.verifyresponseparametersavailable(java.util.List<java.util.List<java.lang.String>>)

@UnhappyPath
Scenario Outline: To verify get satellites endpoint functionality using incorrect satellite id # src/test/resources/cucumber.features/GetSatellites.feature:38
  Given user call the get endpoint for satellites "35544"                                      # com.example.iss.stepdefs.GeneralSteps.usercallthegetendpointforsatelite(java.lang.String)
  When user receive a 404 HTTP response                                                        # com.example.iss.stepdefs.GeneralSteps.userreceiveahttpresponse(java.lang.Integer)
io.restassured.path.json.JsonPath@3b93307d
Verified satellite not found
Verified 404
  Then verify response parameters are available                                                # com.example.iss.stepdefs.GeneralSteps.verifyresponseparametersavailable(java.util.List<java.util.List<java.lang.String>>)
]]></system-out>
  <system-err><![CDATA[SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/Users/Prasad.Pande/.gradle/caches/6.3/generated-gradle-jars/gradle-api-6.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/Users/Prasad.Pande/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.2.3/7c4f3c474fb2c041d8028740440937705ebb473a/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.gradle.internal.logging.slf4j.OutputEventListenerBackedLoggerContext]
]]></system-err>
</testsuite>
